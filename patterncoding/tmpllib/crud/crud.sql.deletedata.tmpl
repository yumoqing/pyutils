# -*- coding:utf8 -*-
request.args = uObject(request.args)
print request.args
retdata = {
	"actionlist":[],
}
{% macro renderNullCheck(f) %}
	errdata={
		"status":"error",
		"errormsg":u"{{f}} is Null,but required"
	}
	retdata['data'] = errdata
	return retdata
{% endmacro %}
kkv = {}
{% for f in fields if f.name in summary[0].primary %}
v = request.args.get(u'{{f.name.lower()}}',None)
if v is not None:
{% if f.type == 'str' %}
	if v[0] == u'': 
		v1 = None 
	else:
		v1 = v[0]
	kkv.update({u'{{f.name.lower()}}':v1})
{% elif f.type in ['long','short','llong'] %}
	if v[0] == u'': 
		v1 = None 
	else:
		v1 = int(v[0])
	kkv.update({u'{{f.name.lower()}}':v1})
{% elif f.type in ['float','double','ddouble','decimal'] %}
	if v[0] == u'': 
		v1 = None 
	else:
		v1 = float(v[0])
	kkv.update({u'{{f.name.lower()}}.lower()':v1})
{% else %}
	if v[0] == u'': 
		v1 = None 
	else:
		v1 = v[0]
	kkv.update({u'{{f.name.lower()}}.lower()':v1})
{% endif %}
else:
{{renderNullCheck(f.name.lower())}}
	pass
{% endfor %}
conds = [k + u'=${' + k + u'}$' for k,v in kkv.items() ]

sql_string = u"delete from {{summary[0].name.lower()}} where %s" % u' and '.join(conds)
print sql_string
print sql_string
dadesc = {
	"actionlist":[],
	"data":{
		"sqldesc":{
			"writer":{
				"filetype":"records",
				"kwargs":{
				}
			},
			"sql_string":sql_string,
			"db":"{{dbname}}",
			"default":{"rows":10,"page":1,"sort":"{{summary[0].primary[0].lower()}}","order":"DESC"}
		}
	}
}

data = sqlds(dadesc,kkv)

retdata['data'] = data
return retdata

